import pulp

# 定義されたインデックスのみ変数を作成（0-1変数）
indices = [(1,1),(1,2),(1,4),(2,1),(2,4),(3,2),(3,3),(3,4),(4,1),(4,2),(4,3),(4,4)]
x = pulp.LpVariable.dicts("x", indices, 0, 1, cat=pulp.LpBinary)

# 問題定義（最大化）
p = pulp.LpProblem("割当問題", sense=pulp.LpMaximize)

# 目的関数
p += (
    5*x[1,1] + 4*x[1,2] + 3*x[1,4] +
    2*x[2,1] + 3*x[2,4] +
    5*x[3,2] + 4*x[3,3] + 5*x[3,4] +
    5*x[4,1] + 4*x[4,2] + 4*x[4,3] + 3*x[4,4]
), "評価値の合計"

# 各役員は1つの役職に割り当てられる
p += x[1,1] + x[1,2] + x[1,4] == 1, "役員1"
p += x[2,1] + x[2,4] == 1,         "役員2"
p += x[3,2] + x[3,3] + x[3,4] == 1, "役員3"
p += x[4,1] + x[4,2] + x[4,3] + x[4,4] == 1, "役員4"

# 各役職は1人に割り当てられる
p += x[1,1] + x[2,1] == 1, "役職1"
p += x[1,2] + x[3,2] + x[4,2] == 1, "役職2"
p += x[3,3] + x[4,3] == 1, "役職3"
p += x[1,4] + x[2,4] + x[3,4] + x[4,4] == 1, "役職4"

# 求解
result = p.solve()
print(pulp.LpStatus[result])
print(f'目的関数値 = {pulp.value(p.objective):.0f}')
for i,j in indices:
    if pulp.value(x[i,j]) == 1:
        print(f'役員{i} → 役職{j}')
